#pragma checksum "D:\Webet333\Code\Webet333.web\Pages\Account\Register.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4f9e3e549b6a90b3489add52526c33927531e38f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Webet333.web.Pages.Account.Pages_Account_Register), @"mvc.1.0.razor-page", @"/Pages/Account/Register.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Account/Register.cshtml", typeof(Webet333.web.Pages.Account.Pages_Account_Register), null)]
namespace Webet333.web.Pages.Account
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "D:\Webet333\Code\Webet333.web\Pages\_ViewImports.cshtml"
using Webet333.web;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4f9e3e549b6a90b3489add52526c33927531e38f", @"/Pages/Account/Register.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"58fc53bec6af6f4698725d2bc5fc6237bffa7664", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Account_Register : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "D:\Webet333\Code\Webet333.web\Pages\Account\Register.cshtml"
  
    ViewData["Title"] = "Register";
    Layout = "~/Pages/Shared/_Layout.cshtml";

#line default
#line hidden
            BeginContext(98, 18, true);
            WriteLiteral("<title>Webet333 - ");
            EndContext();
            BeginContext(117, 17, false);
#line 6 "D:\Webet333\Code\Webet333.web\Pages\Account\Register.cshtml"
             Write(ViewData["Title"]);

#line default
#line hidden
            EndContext();
            BeginContext(134, 827, true);
            WriteLiteral(@" </title>
<script src=""../../js/constants/SMSConsts.js"" type=""text/javascript"" charset=""utf-8""></script>
<script>
    if (localStorage.getItem('currentUser') != null)
        location.href = ""/Home/home"";

    function activateButton() {
        var recaptcha = document.getElementById(""checkRecaptcha"");
        if (!recaptcha.checked) {
            event.preventDefault();
            return ShowError(ChangeErroMessage(""recaptcha""));
        }
        var checkbox = document.getElementById(""checkbox"");
        if (checkbox.checked) {
            DoRegister();
        }
        else {
            ShowError(ChangeErroMessage(""team_conditon_agree""))
        }
    }

    //function validationEmail() {
    //    var email = document.getElementById('txt_reg_email');
    //    var filter = /^([\w-\.]+");
            EndContext();
            BeginContext(962, 5354, true);
            WriteLiteral(@"@([\w-]+\.)+[\w-]{2,4})?$/;
    //    if (!filter.test(email.value)) {
    //        email.classList.remove(""valid"");
    //        email.classList.add(""error"");
    //    } else {
    //        email.classList.remove(""error"");
    //        email.classList.add(""valid"");
    //    }
    //}

    //function validationNumber() {
    //    var number = document.getElementById('txt_mobile');
    //    var filter = /^(\+?6?01)[0|1|2|3|4|6|7|8|9]\-*[0-9]{7,8}$/;
    //    if (filter.test(number.value)) {
    //        number.classList.remove(""valid"");
    //        number.classList.add(""error"");
    //    } else {
    //        number.classList.remove(""error"");
    //        number.classList.add(""valid"");
    //    }
    //}
    function space() {
        var regex = new RegExp(""^[a-zA-Z0-9]+$"");
        var key = String.fromCharCode(!event.charCode ? event.which : event.charCode);
        if (!regex.test(key)) {
            event.preventDefault();
            return false;
        }
   ");
            WriteLiteral(@" }

    function validationRegister(i) {
        if (event.keyCode == 9) {
            if (i === 0) {
                var username = document.getElementById('txt_username');
                if (username.value === """") {
                    username.classList.remove(""valid"");
                    username.classList.add(""error"");
                } else {
                    username.classList.remove(""error"");
                    username.classList.add(""valid"");
                }
            }
            if (i === 1) {
                var password = document.getElementById('txt_password');
                if (password.value === """") {
                    password.classList.remove(""valid"");
                    password.classList.add(""error"");
                } else {
                    password.classList.remove(""error"");
                    password.classList.add(""valid"");
                }
            }
            if (i === 2) {
                var passwordConfirm = document.getElementBy");
            WriteLiteral(@"Id('txt_confirm_password');
                if (passwordConfirm.value === """") {
                    passwordConfirm.classList.remove(""valid"");
                    passwordConfirm.classList.add(""error"");
                } else {
                    passwordConfirm.classList.remove(""error"");
                    passwordConfirm.classList.add(""valid"");
                }
            }
            if (i === 3) {
                var nricName = document.getElementById('txt_nric');
                if (nricName.value === """") {
                    nricName.classList.remove(""valid"");
                    nricName.classList.add(""error"");
                } else {
                    nricName.classList.remove(""error"");
                    nricName.classList.add(""valid"");
                }
            }
            if (i === 4) {
                var mobile = document.getElementById('txt_mobile');
                if (mobile.value === """") {
                    mobile.classList.remove(""valid"");
           ");
            WriteLiteral(@"         mobile.classList.add(""error"");
                } else {
                    mobile.classList.remove(""error"");
                    mobile.classList.add(""valid"");
                }
            }
        }
    }
</script>

<!-- Account Registration Start -->
<div class=""account-reg pad-comman-fifteen mar-fifty white-bg-tab-panel"">
    <h4 class=""register symbol mar-btm-ten""><span class=""lang"" key=""register_account""></span></h4>
    <div role=""form"" method=""post"" id=""register"">
        <div class=""row"">
            <div class=""col-sm-6"">
                <div class=""info-form"">
                    <p class=""big-text no-mar""><strong><span class=""lang"" key=""account_information""></span></strong></p>
                    <label class=""user mendatory""><input id=""txt_username"" name=""txt_username"" onkeydown=""validationRegister(0)"" data-translate=""username_placeholder"" type=""text"" class=""reg-form"" placeholder=""Username"" value="""" required="""" onkeypress=""space()""><p class=""star"">*</p></label>
    ");
            WriteLiteral(@"                <p class=""note no-mar mar-btm-ten""><span class=""lang"" key=""username_instruction""></span></p>
                    <label class=""lock mendatory""><input id=""txt_password"" name=""txt_password"" onkeydown=""validationRegister(1)"" data-translate=""password_placeholder"" autocomplete=""new-password""  type=""password""    class=""reg-form"" placeholder=""Password"" onChange=""checkPasswordMatch();"" required ><p class=""star"">*</p></label>
                    <p class=""note no-mar mar-btm-ten""><span class=""lang"" key=""password_instruction""></span></p>
                    <p class=""note no-mar mar-btm-ten""><span class=""lang"" key=""password_alpha_instruction""></span></p>
                    <p class=""note no-mar mar-btm-ten""><span class=""lang"" key=""password_username_same""></span></p>
                    <label class=""lock mendatory""><input id=""txt_confirm_password"" name="""" onkeydown=""validationRegister(2)"" data-translate=""confirm_password_placeholder"" autocomplete=""new-password""  type=""password""    class=""reg-form""");
            WriteLiteral(" placeholder=\"Confirm Password\" required><p class=\"star\">*</p></label>\r\n                    <label style=\"color:#ff0000;font-weight:bold\" class=\"registrationFormAlert\" id=\"divCheckPasswordMatch\"> </label>\r\n                    <br />\r\n");
            EndContext();
            BeginContext(6772, 673, true);
            WriteLiteral(@"                    <p class=""big-text no-mar""><strong><span class=""lang"" key=""contact_details""></span></strong></p>
                    <p class=""note no-mar mar-btm-ten""><span class=""lang"" key=""contact_instruction""></span></p>
                    <label class=""num mendatory"">
                        <input id=""txt_mobile"" name=""txt_mobile"" type=""number"" pattern=""\d*"" class=""reg-form"" onkeydown=""validationRegister(4)"" placeholder=""01234567891"" value="""" required="""">
                        <p class=""star"">*</p>
                    </label>
                </div>
            </div>
            <div class=""col-sm-6"">
                <div class=""info-form"">
");
            EndContext();
            BeginContext(7988, 480, true);
            WriteLiteral(@"
                    <p class=""big-text no-mar""><strong><span class=""lang"" key=""basic_information""></span></strong></p>
                    <label class=""mar-btm-no user mendatory""><input id=""txt_nric"" name=""txt_nric"" onkeydown=""validationRegister(3)"" data-translate=""nric_placeholder"" type=""text"" class=""reg-form"" placeholder=""Full Name as NRIC"" value="""" required=""""><p class=""star"">*</p></label>
                    <p class=""note no-mar lang"" key=""name_instruction""></p>

");
            EndContext();
            BeginContext(9020, 2189, true);
            WriteLiteral(@"                    <div class=""row"">
                        <div class=""col-lg-9"">
                            <div class=""info-form register-notice deposit-section pad-top-twentyfive"" style=""background-color: #eeeeee; border-radius: 6px;"">
                                <div class=""pad-lr-comman"">
                                    <h6 class=""info-notice"">Information Notice</h6>
                                    <ol class=""register-notes-list"">
                                        <li>Phone number is to retrieve your password when you are forgotten.</li>
                                        <li>Any New rebate credit to your account, will get a SMS notification</li>
                                        <li>Phone number is your identity, it is very important. please write a phone number you can receive SMS</li>
                                    </ol>
                                </div>
                            </div>
                        </div>
                    </div>");
            WriteLiteral(@"
                </div>
            </div>
        </div>
        <hr />
        <div class=""row"">
            <div class=""col-lg-offset-1 col-lg-5"">
                <div class=""captcha-code"">
                    <label class=""checkbox-inline""><input type=""checkbox"" id=""checkRecaptcha"" value="""">I'm not a robot</label>
                    <div class=""captcha-icon"">
                        <div class=""captcha-content"">
                            <p>reCAPTCHA</p>
                            <p class=""small"">Privacy - Terms</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class=""checkbox"">
            <label class=""tick-note""><input name=""checkbox"" id=""checkbox"" type=""checkbox"" value=""0"" required=""""><span key=""terms_condition_accept"" class=""lang""></span></label>
        </div>
        <div class=""text-center mar-comman"" style=""margin-left:30px"">
            <button type=""button"" id=""button"" name=""Save"" value=""");
            WriteLiteral("Submit\" class=\"submit\" onclick=\"activateButton()\"><span class=\"lang\" key=\"submit_button\"></span></button>\r\n        </div>\r\n    </div>\r\n</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Pages_Account_Register> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Account_Register> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_Account_Register>)PageContext?.ViewData;
        public Pages_Account_Register Model => ViewData.Model;
    }
}
#pragma warning restore 1591
